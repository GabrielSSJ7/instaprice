{"version":3,"file":"static/webpack/static\\development\\pages\\Post.js.d3d9d5792c25c57b6e1b.hot-update.js","sources":["webpack:///./pages/Post.js"],"sourcesContent":["import React from \"react\";\r\nimport firebase from \"firebase\";\r\nimport TopMenu from \"../components/TopMenu\";\r\nimport BottomMenu from \"../components/BottomMenu\";\r\nimport Template from \"../components/Template\";\r\n\r\n\r\nimport { URL as URL_ } from \"../config/types\";\r\n\r\nclass Post extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var config = {\r\n      apiKey: \"AIzaSyBEDZLOIOmjgAIyy7PIdKbcKqajbE8sxaY\",\r\n      authDomain: \"projeto-teste-d356c.firebaseapp.com\",\r\n      databaseURL: \"https://projeto-teste-d356c.firebaseio.com\",\r\n      projectId: \"projeto-teste-d356c\",\r\n      storageBucket: \"projeto-teste-d356c.appspot.com\",\r\n      messagingSenderId: \"605367050222\"\r\n    };\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp(config);\r\n    }\r\n\r\n    this.state = {\r\n      image: \"Selecione uma imagem\",\r\n      uploadImage: \"\",\r\n      nome: \"\",\r\n      preco: \"\",\r\n      desc: \"\",\r\n      imagem: \"\"\r\n    };\r\n  }\r\n\r\n  handleImage = event => {\r\n    this.setState({ uploadImage: event.target.files[0] });\r\n    var output = document.getElementById(\"imageArticle\");\r\n    if (event.target.files[0]) {\r\n      if (event.target.files[0].name.length > 10) {\r\n        this.setState({\r\n          image: event.target.files[0].name.substr(0, 16) + \"...\"\r\n        });\r\n      }\r\n      output.src = URL.createObjectURL(event.target.files[0]);\r\n    } else {\r\n      output.src = \"\";\r\n      this.setState({ image: \"Selecione uma imagem\" });\r\n    }\r\n  };\r\n\r\n  inserirProduto(id, event) {\r\n    var storageRef = firebase.storage().ref();\r\n\r\n    const metadata = {\r\n      contentType: event.type\r\n    };\r\n\r\n    let uploadTask = storageRef\r\n      .child(\"images/\" + event.name + Date.now())\r\n      .put(event, metadata);\r\n\r\n    // Listen for state changes, errors, and completion of the upload.\r\n    uploadTask.on(\r\n      firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n      function(snapshot) {\r\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        console.log(\"Upload is \" + progress + \"% done\");\r\n       this.setState({ progress })\r\n        switch (snapshot.state) {\r\n          case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n            console.log(\"Upload is paused\");\r\n            break;\r\n          case firebase.storage.TaskState.RUNNING: // or 'running'\r\n            console.log(\"Upload is running\");\r\n            break;\r\n        }\r\n      },\r\n      function(error) {\r\n        // A full list of error codes is available at\r\n        // https://firebase.google.com/docs/storage/web/handle-errors\r\n        switch (error.code) {\r\n          case \"storage/unauthorized\":\r\n            // User doesn't have permission to access the object\r\n            break;\r\n\r\n          case \"storage/canceled\":\r\n            // User canceled the upload\r\n            break;\r\n\r\n          case \"storage/unknown\":\r\n            // Unknown error occurred, inspect error.serverResponse\r\n            break;\r\n\r\n          case \"storage/invalid-argument\":\r\n            break;\r\n        }\r\n      },\r\n      function() {\r\n        // Upload completed successfully, now we can get the download URL\r\n        uploadTask.snapshot.ref\r\n          .getDownloadURL()\r\n          .then(function(downloadURL) {\r\n            const data = {\r\n              nome: this.state.nome,\r\n              preco: this.state.preco,\r\n              desc: this.state.desc,\r\n              imagem: downloadURL,\r\n              token: localStorage.getItem(\"authToken\")\r\n            };\r\n\r\n            const instance = axios.create({\r\n              headers: {\r\n                Authorization: `bearer ${localStorage.getItem(\"authToken\")}`\r\n              }\r\n            });\r\n\r\n            instance.post(`${URL_}insert`, data).then(res => {\r\n\r\n            })\r\n            .catch(err => {\r\n              this.setState({\r\n                erro: err.response.data ? err.response.data : \"\"\r\n              })\r\n            });\r\n          })\r\n          .catch(err => {\r\n            console.log(err.response);\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  divulgar() {\r\n    this.inserirProduto(this.props.uploadImage)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Template>\r\n          <TopMenu props={this.props} />\r\n\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4 col-xs-4 form-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"nome\"\r\n                  id=\"nome\"\r\n                  name=\"nome\"\r\n                  onChange={e => {this.setState({ nome: e.target.value})}}\r\n                  value={this.state.nome}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 col-xs-4 form-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"number\"\r\n                  placeholder=\"preÃ§o\"\r\n                  id=\"preco\"\r\n                  name=\"preco\"\r\n                  onChange={e => {this.setState({ preco: e.target.value})}}\r\n                  value={this.state.preco}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 col-xs-4 form-group\">\r\n                <img\r\n                  id=\"imageArticle\"\r\n                  alt=\"Imagem a ser upload\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n                <button className=\"btn btn-success\">\r\n                  <label style={{ cursor: \"pointer\" }} htmlFor=\"uploadImage\">\r\n                    {this.state.image}\r\n                  </label>\r\n                </button>\r\n\r\n                <input\r\n                  style={{ display: \"none\" }}\r\n                  className=\"form-control\"\r\n                  type=\"file\"\r\n                  id=\"uploadImage\"\r\n                  onChange={this.handleImage}\r\n                  name=\"uploadImage\"\r\n                />\r\n                <h4>Progresso do upload {this.state.progress}</h4>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-12 col-md-12\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  onChange={e => {this.setState({ desc: e.target.value})}}\r\n                  value={this.state.desc}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\" style={{ marginTop: \"15px\" }}>\r\n              <div className=\"col-xs-6 col-md-6\">\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => this.divulgar()}\r\n                >\r\n                  Divulgar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <BottomMenu />\r\n        </Template>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA0BA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AArCA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAfA;AAuBA;AACA;;;AAiBA;AACA;AAEA;AACA;AADA;AAIA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgiNA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}